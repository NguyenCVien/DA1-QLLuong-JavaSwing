/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterFace;

import DAO.ThongKeDAO;
import Helper.MsgBox;
import Model.Luong;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ADMIN
 */
public class ThongKeJInternal extends javax.swing.JInternalFrame {

    public ThongKeJInternal() {
        initComponents();
        //fillComboBoxPhongBan();
        fillToTable();
    }
    String strFind = "";
    ThongKeDAO dao = new ThongKeDAO();

//    public void fillComboBoxPhongBan() {
//        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaPhong.getModel(); //kết nối model với cbo
//        model.removeAllElements();   //xóa toàn bộ item của cbo
//        PhongBanDAO pbdao = new PhongBanDAO();
//        try {
//            List<PhongBan> list = pbdao.getAllPhongBan();
//            for (PhongBan cd : list) {
//                model.addElement(cd);
//            }
//            cboMaPhong.setSelectedIndex(0);
//        } catch (Exception e) {
//            //e.printStackTrace();
//            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
//        }
//    }
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
        model.setRowCount(1);//clear table
        try {
            for (Luong tk : dao.getAllLuong()) {
                Object rowData[] = new Object[12];
                rowData[0] = tk.getNam();
                rowData[1] = tk.getThang();
                rowData[2] = tk.getMaNV();
                rowData[3] = tk.getTenNV();
                rowData[4] = tk.getSoNgayLam();
                rowData[5] = tk.getGioLamThem();
                rowData[6] = tk.getPhuCap();
                rowData[7] = tk.getBacLuong();
                rowData[8] = tk.getLuongCoBan();
                rowData[9] = tk.getTamUng();
                rowData[10] = tk.getTienThuong();
                rowData[11] = tk.getThucLinh();
                model.addRow(rowData);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void selectToTable() {
        DefaultTableModel tbModel = (DefaultTableModel) tblThongKe.getModel();
        tbModel.setRowCount(0);//Xoa data trong table
        for (Luong tk : dao.findLuongByMaNV(strFind)) {
            Object dataRow[] = new Object[12];
            dataRow[0] = tk.getNam();
            dataRow[1] = tk.getThang();
            dataRow[2] = tk.getMaNV();
            dataRow[3] = tk.getTenNV();
            dataRow[4] = tk.getSoNgayLam();
            dataRow[5] = tk.getGioLamThem();
            dataRow[6] = tk.getPhuCap();
            dataRow[7] = tk.getBacLuong();
            dataRow[8] = tk.getLuongCoBan();
            dataRow[9] = tk.getTamUng();
            dataRow[10] = tk.getTienThuong();
            dataRow[11] = tk.getThucLinh();

            tbModel.addRow(dataRow);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cboThang = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtLuongTheoMa = new javax.swing.JTextField();
        Export = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblThongKe = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("THỐNG KÊ LƯƠNG");

        jLabel1.setText("Chọn tháng:");

        cboThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cboThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThangActionPerformed(evt);
            }
        });

        jLabel2.setText("Chọn năm:");

        cboNam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        cboNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamActionPerformed(evt);
            }
        });

        jLabel4.setText("Lương theo mã:");

        txtLuongTheoMa.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtLuongTheoMaCaretUpdate(evt);
            }
        });

        Export.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Print.png"))); // NOI18N
        Export.setText("Export Excel");
        Export.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportActionPerformed(evt);
            }
        });

        tblThongKe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Năm", "Tháng", "Mã NV", "Tên NV", "Số ngày làm", "Giờ làm thêm", "Phụ cấp", "Bậc lương", "Lương cơ bản", "Tạm ứng", "Tiền thưởng", "Thực lĩnh"
            }
        ));
        jScrollPane2.setViewportView(tblThongKe);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboNam, 0, 203, Short.MAX_VALUE)
                    .addComponent(cboThang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(46, 46, 46)
                .addComponent(jLabel4)
                .addGap(31, 31, 31)
                .addComponent(txtLuongTheoMa, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Export, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1018, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txtLuongTheoMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Export, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void XuatFlieExcel() {
        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("Bảng lương");
            XSSFRow row = null;
            Cell cell = null;
            row = sheet.createRow(3);
            cell = row.createCell(0,CellType.STRING);
            cell.setCellValue("Năm");
            cell = row.createCell(1,CellType.STRING);
            cell.setCellValue("Tháng");
            cell = row.createCell(2,CellType.STRING);
            cell.setCellValue("Mã nhân viên");
            cell = row.createCell(3,CellType.STRING);
            cell.setCellValue("Tên nhân viên");
            cell = row.createCell(4,CellType.STRING);
            cell.setCellValue("Số ngày làm");
            cell = row.createCell(5,CellType.STRING);
            cell.setCellValue("Giờ làm thêm");
            cell = row.createCell(6,CellType.STRING);
            cell.setCellValue("Phụ cấp");
            cell = row.createCell(7,CellType.STRING);
            cell.setCellValue("Bậc lương");
            cell = row.createCell(8,CellType.STRING);
            cell.setCellValue("Lương cơ bản");
            cell = row.createCell(9,CellType.STRING);
            cell.setCellValue("Tạm ứng");
            cell = row.createCell(10,CellType.STRING);
            cell.setCellValue("Tiền thưởng");
            cell = row.createCell(11,CellType.STRING);
            cell.setCellValue("Thực lĩnh");
            
            for(int i = 0; i < tblThongKe.getRowCount(); i++) {
                row = sheet.createRow(4+i);
                cell = row.createCell(0,CellType.STRING);
                cell.setCellValue(i+1);
            }
        } catch (Exception e) {
        }
    }
    
    
    private void ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportActionPerformed
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook exelJTableExporter = null;
        //Chon noi luu file
        JFileChooser excelFileChooser = new JFileChooser();
        //Doi ten Dialog title
        excelFileChooser.setDialogTitle("Save as");
        // Chi chon cac duoi...
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showSaveDialog(null);
        //check if save button is cliked
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            try {
                //ADD POI Libraries to NetBeans
                exelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = exelJTableExporter.createSheet("Bảng lương");
                XSSFRow excelRow0 = excelSheet.createRow(0);
                excelRow0.createCell(0).setCellValue("Năm");
                excelRow0.createCell(1).setCellValue("Tháng");
                excelRow0.createCell(2).setCellValue("Mã nhân viên");
                excelRow0.createCell(3).setCellValue("Tên nhân viên");
                excelRow0.createCell(4).setCellValue("Số ngày làm");
                excelRow0.createCell(5).setCellValue("Giờ làm thêm");
                excelRow0.createCell(6).setCellValue("Phụ cấp");
                excelRow0.createCell(7).setCellValue("Bậc lương");
                excelRow0.createCell(8).setCellValue("Lương cơ bản");
                excelRow0.createCell(9).setCellValue("Tạm ứng");
                excelRow0.createCell(10).setCellValue("Tiền thưởng");
                excelRow0.createCell(11).setCellValue("Thực lĩnh");
                for (int i = 1; i < tblThongKe.getRowCount(); i++) {
                    XSSFRow excelRow = excelSheet.createRow(i);
                        for (int j = 0; j < tblThongKe.getColumnCount(); j++) {
                            XSSFCell excelCell = excelRow.createCell(j);
                            excelCell.setCellValue(tblThongKe.getValueAt(i, j).toString());
                    }
                }
                excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                exelJTableExporter.write(excelBOU);
                MsgBox.alert(this, "Export thành công!");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();
                    }
                    if (excelFOU != null) {
                        excelFOU.close();
                    }
                    if (exelJTableExporter != null) {
                        exelJTableExporter.close();
                    }
                } catch (IOException ex) {
                    Logger.getLogger(ThongKeJInternal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_ExportActionPerformed

    private void txtLuongTheoMaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtLuongTheoMaCaretUpdate
        strFind = txtLuongTheoMa.getText();
        selectToTable();
    }//GEN-LAST:event_txtLuongTheoMaCaretUpdate

    public void fillToCboNam() {
        DefaultTableModel tbModel = (DefaultTableModel) tblThongKe.getModel();
        tbModel.setRowCount(0);//Xoa data trong table
        for (Luong tk : dao.findLuongByCboNam(cboNam.getSelectedItem().toString())) {
            Object dataRow[] = new Object[12];
            dataRow[0] = tk.getNam();
            dataRow[1] = tk.getThang();
            dataRow[2] = tk.getMaNV();
            dataRow[3] = tk.getTenNV();
            dataRow[4] = tk.getSoNgayLam();
            dataRow[5] = tk.getGioLamThem();
            dataRow[6] = tk.getPhuCap();
            dataRow[7] = tk.getBacLuong();
            dataRow[8] = tk.getLuongCoBan();
            dataRow[9] = tk.getTamUng();
            dataRow[10] = tk.getTienThuong();
            dataRow[11] = tk.getThucLinh();

            tbModel.addRow(dataRow);
        }
    }

    public void fillToCboThang() {
        DefaultTableModel tbModel = (DefaultTableModel) tblThongKe.getModel();
        tbModel.setRowCount(0);//Xoa data trong table
        for (Luong tk : dao.findLuongByCboThang(cboThang.getSelectedItem().toString())) {
            Object dataRow[] = new Object[12];
            dataRow[0] = tk.getNam();
            dataRow[1] = tk.getThang();
            dataRow[2] = tk.getMaNV();
            dataRow[3] = tk.getTenNV();
            dataRow[4] = tk.getSoNgayLam();
            dataRow[5] = tk.getGioLamThem();
            dataRow[6] = tk.getPhuCap();
            dataRow[7] = tk.getBacLuong();
            dataRow[8] = tk.getLuongCoBan();
            dataRow[9] = tk.getTamUng();
            dataRow[10] = tk.getTienThuong();
            dataRow[11] = tk.getThucLinh();

            tbModel.addRow(dataRow);
        }
    }
    private void cboNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamActionPerformed
        fillToCboNam();
    }//GEN-LAST:event_cboNamActionPerformed

    private void cboThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThangActionPerformed
        fillToCboThang();
    }//GEN-LAST:event_cboThangActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Export;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JComboBox<String> cboThang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblThongKe;
    private javax.swing.JTextField txtLuongTheoMa;
    // End of variables declaration//GEN-END:variables
}
